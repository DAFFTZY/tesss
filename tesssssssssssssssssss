-- Load required libraries
local Fluent = loadstring(game:HttpGet("https://raw.githubusercontent.com/Knuxy92/Ui-linoria/main/Fluent/Fluent.lua"))()
local SaveManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/SaveManager.lua"))()
local InterfaceManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/InterfaceManager.lua"))()

-- Initialize Services
local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local VirtualUser = game:GetService("VirtualUser")
local GuiService = game:GetService("GuiService")
local VirtualInputManager = game:GetService("VirtualInputManager")
local HttpService = game:GetService("HttpService")

-- Player references
local LocalPlayer = Players.LocalPlayer
local PlayerGui = LocalPlayer:WaitForChild("PlayerGui")
local Backpack = LocalPlayer:WaitForChild("Backpack")
local RodName = ReplicatedStorage.playerstats[LocalPlayer.Name].Stats.rod.Value
local CoreGui = game:GetService("CoreGui")
local Lighting = game:GetService("Lighting")
local RunService = game:GetService("RunService")
local Terrain = workspace:FindFirstChildOfClass("Terrain")
-- Hook functions
local hiddenHook = hookfunction or hookfunc
LowKeyFile = LowKeyFile or hiddenHook

local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local speaker = Players.LocalPlayer

-- Fungsi untuk mendapatkan HumanoidRootPart
local function getRoot(character)
    return character and character:FindFirstChild("HumanoidRootPart") or nil
end
-- Anti-cheat bypass
task.spawn(function()
    if LowKeyFile then
        -- Create dummy function to avoid code pattern detection
        local function obfuscate(...)
            return 'Protect BY ShileD Team'
        end
        print('[INFO] Protect BY ShileD Team')
        
        -- Setup first hook
        local success, err = pcall(function()
            LowKeyFile(game:GetService("ContentProvider").PreloadAsync, obfuscate)
        end)

        if not success then
            warn("[Flow] : AC : 1 Failed with " .. err)
        end

        -- Setup second hook to prevent re-detection
        local success2, err2 = pcall(function()
            LowKeyFile(game:GetService("ContentProvider").PreloadAsync, obfuscate)
        end)

        if not success2 then
            warn("[Flow] : AC : 2 Failed with " .. err2)
        end
    else
        warn("[Flow] : LowKeyFile not available, hook failed.")
    end
    
    task.wait(1) 
    
    -- Remove analytics error
    pcall(function()
        if R and R.GameAnalyticsError then
            R.GameAnalyticsError:Destroy()
            warn("[Flow] : GameAnalyticsError successfully removed!")
        end
    end)
    
    -- Create random table to avoid detection
    local fakeTable = {}
    for i = 1, 10 do
        fakeTable[i] = math.random()
    end
    fakeTable = nil -- Delete table to avoid suspicion
end)

-- Anti-AFK Protection
game.Players.LocalPlayer.Idled:Connect(function()
    VirtualUser:CaptureController()
    VirtualUser:ClickButton2(Vector2.new())
end)

-- Initialize Config
if not _G.Config then
    _G.Config = {
        ['Farm Fish'] = false,
        AutoCast = false,
        InstantCast = false,
        AutoReel = false,
        InstantReel = false,
        equipRod = false,
        AutoSell = false,
        AutoShake = false,
        RemoveUIFisch = false,
        ReelMode = "Legit"
    }
end

-- Fishing System Functions
local FishingSystem = {}

function FishingSystem.instantLure(rodTool)
    pcall(function()
        if rodTool and rodTool.values and rodTool.values.lure then
            rodTool.values.lure.Value = 100
        end
    end)
end

function FishingSystem.autoReel()
    local reel = LocalPlayer.PlayerGui:FindFirstChild("reel")
    if not reel then return end
    
    local bar = reel:FindFirstChild("bar")
    local playerbar = bar and bar:FindFirstChild("playerbar")
    local fish = bar and bar:FindFirstChild("fish")
    
    if playerbar and fish then
        playerbar.Position = fish.Position
    end
end

function FishingSystem.noPerfect()
    local reel = LocalPlayer.PlayerGui:FindFirstChild("reel")
    if not reel then return end
    
    local bar = reel:FindFirstChild("bar")
    local playerbar = bar and bar:FindFirstChild("playerbar")
    
    if playerbar then
        playerbar.Position = UDim2.new(0, 0, -35, 0)
        task.wait(0.2)
    end
end

-- Auto Reel System
local autoReelConnection = nil
local autoReelEnabled = false
local ReelMode = "Legit"

function FishingSystem.startAutoReel()
    if ReelMode == "Legit" then
        if autoReelConnection or not autoReelEnabled then return end
        FishingSystem.noPerfect()
        task.wait(1)
        autoReelConnection = RunService.RenderStepped:Connect(FishingSystem.autoReel)
    end
end

function FishingSystem.stopAutoReel()
    if autoReelConnection then
        autoReelConnection:Disconnect()
        autoReelConnection = nil
    end
end

-- Initialize function collection if needed
if not _G.AllFuncs then
    _G.AllFuncs = {}
end

-- Events for fishing
local reelfinished = ReplicatedStorage:WaitForChild("events"):WaitForChild("reelfinished ")

-- Rod Equipment Function
local function equipRod()
    if _G.Config.equipRod then
        task.wait(0.2)
        local character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
        if not character then
            return
        end
        local humanoid = character:FindFirstChildOfClass("Humanoid")
        local rodInBackpack = Backpack:FindFirstChild(RodName)
        local rodInCharacter = character:FindFirstChild(RodName)

        if rodInCharacter then
            return
        end
        if rodInBackpack and humanoid then
            humanoid:EquipTool(rodInBackpack)
        end
    end
end

-- Setup equipment listeners
Backpack.ChildAdded:Connect(function(child)
    if child:IsA("Tool") then
        equipRod()
    end
end)

LocalPlayer.CharacterAdded:Connect(function(character)
    character.ChildAdded:Connect(function(child)
        if child:IsA("Tool") then
            equipRod()
        end
    end)
end)

-- Character Animation Freeze System
local isFreaze = false

local function FreazeChar(state)
    isFreaze = state  
    local Character = LocalPlayer.Character
    if Character then
        local Humanoid = Character:FindFirstChild("Humanoid")
        local Animator = Humanoid and Humanoid:FindFirstChild("Animator")
        local AnimateScript = Character:FindFirstChild("Animate")

        if isFreaze then
            if Animator then
                Animator:Destroy() 
            end
            if AnimateScript then
                AnimateScript.Disabled = true
            end
        else
            if Humanoid and not Humanoid:FindFirstChild("Animator") then
                local NewAnimator = Instance.new("Animator")
                NewAnimator.Parent = Humanoid
            end
            if AnimateScript then
                AnimateScript.Disabled = false
            end
        end
    end
end

-- Rod use detection and auto-casting
LocalPlayer.Character.ChildAdded:Connect(function(child)
    if child.Name == RodName then
        print("[DEBUG] Rod found in character:", child.Name)
        if _G.Config.AutoCast == true then
            task.spawn(function() -- Jalankan di thread terpisah
                while _G.Config.AutoCast and LocalPlayer.Character:FindFirstChild(RodName) do
                    local Rod = LocalPlayer.Character:FindFirstChild(RodName)
                    if Rod then
                        Rod.events.cast:FireServer(1) -- Lempar pancing
                        task.wait(0) -- Pastikan cast dikirim ke server

                        local Bobber = Rod:FindFirstChild("bobber")
                        if Bobber then
                            local Params = RaycastParams.new()
                            Params.FilterType = Enum.RaycastFilterType.Include
                            Params.FilterDescendantsInstances = { workspace.Terrain }
                            local RaycastResult = workspace:Raycast(Bobber.Position, -Vector3.yAxis * 100, Params)

                            -- Pindahkan Bobber langsung tanpa delay
                            if RaycastResult and RaycastResult.Instance:IsA("Terrain") then
                                Bobber:PivotTo(CFrame.new(RaycastResult.Position))
                            end
                        end
                        
                        -- Membekukan karakter sebentar lalu membebaskannya
                        FreazeChar(true)
                        FreazeChar(false)
                    end
                    task.wait(2.4) -- Tunggu sebelum casting ulang
                end
            end)
        end
    end
end)

-- Instant Reel handling
PlayerGui.ChildAdded:Connect(function(child)
    if child.Name == "reel" then
        task.spawn(function()
            while child.Parent == PlayerGui do
                if _G.Config.InstantReel then
                    local Bar = child:FindFirstChild("bar")
                    if Bar then
                        Bar:Destroy()
                    end
                    ReplicatedStorage.events["reelfinished "]:FireServer(100, true)
                end
                task.wait(0.0001)
            end
        end)
    end
end)

-- Auto-Shake Function
local function Shake()
    local function MountShakeUI(ShakeUI)
        local SafeZone = ShakeUI:WaitForChild("safezone", 5)

        local function HandleButton(Button)
            if Button then
                Button.Selectable = true  
                Button.BackgroundTransparency = 1  -- Make background transparent
                GuiService.SelectedObject = Button
            end
        end        
        
        if not SafeZone then
            warn("Unable to mount shake UI.")
            return
        end

        local Connect = SafeZone:FindFirstChild("connect")
        if Connect then
            Connect.Enabled = false
        end
        
        SafeZone.Size = UDim2.fromOffset(0, 0)
        SafeZone.Position = UDim2.fromScale(-0.2, 0.2)
        SafeZone.AnchorPoint = Vector2.new(0.2, 0.2)  

        local Connection
        Connection = SafeZone.ChildAdded:Connect(function(Child)
            if Child:IsA("ImageButton") then
                local Done = false
                task.spawn(function()
                    while Child and Child:IsDescendantOf(SafeZone) and not Done do
                        task.wait(0)
                        HandleButton(Child)
                    end
                end)
                task.spawn(function()
                    while Child and Child:IsDescendantOf(SafeZone) do
                        task.wait(0)
                    end
                    Done = true
                end)
            end
        end)

        -- Main loop to handle input
        while SafeZone:IsDescendantOf(LocalPlayer.PlayerGui) do
            if GuiService.SelectedObject and GuiService.SelectedObject:IsDescendantOf(SafeZone) then
                VirtualInputManager:SendKeyEvent(true, Enum.KeyCode.Return, false, game)
                VirtualInputManager:SendKeyEvent(false, Enum.KeyCode.Return, false, game)
            end
            task.wait(0)
        end

        -- Remove event connection if no longer needed
        if Connection then Connection:Disconnect() end
        GuiService.SelectedObject = nil
    end
    
    LocalPlayer.PlayerGui.ChildAdded:Connect(function(Child)
        if Child.Name == "shakeui" and Child:IsA("ScreenGui") then
            task.spawn(function()
                MountShakeUI(Child)
            end)
        end
    end)
end

local isFrozen = false
local frozenPosition = nil

local function FreezeCharacter(state)
    local Character = LocalPlayer.Character
    if not Character then return end

    local HumanoidRootPart = Character:FindFirstChild("HumanoidRootPart")
    if not HumanoidRootPart then return end

    if state then
        frozenPosition = HumanoidRootPart.CFrame
        isFrozen = true
        print("[INFO] Character is now frozen.")
        print(frozenPosition)
        task.spawn(function()
            while isFrozen do
                HumanoidRootPart.CFrame = frozenPosition 
                task.wait(0.01)
            end
        end)
    else
        isFrozen = false
        print("[INFO] Character is now unfrozen.")
    end
end
local function breakVelocity()
    local BeenASecond, V3 = false, Vector3.new(0, 0, 0)

    task.delay(1, function()
        BeenASecond = true
    end)

    while not BeenASecond do
        if speaker.Character then
            for _, v in ipairs(speaker.Character:GetDescendants()) do
                if v:IsA("BasePart") then
                    pcall(function()
                        v.Velocity = V3
                        v.RotVelocity = V3
                    end)
                end
            end
        end
        RunService.Heartbeat:Wait()  -- Lebih optimal daripada `wait()`
    end
end
local function teleportToPlayer(playerName)
    local root = getRoot(speaker.Character)
    local targetPlayer = Players:FindFirstChild(playerName)

    if root and targetPlayer and targetPlayer.Character then
        local targetRoot = getRoot(targetPlayer.Character)
        if targetRoot then
            root.CFrame = targetRoot.CFrame + Vector3.new(3, 1, 0)
        end
    end
    breakVelocity()
end

-- Ambil daftar pemain
local function getPlayerNames()
    local names = {"None"}
    for _, player in ipairs(Players:GetPlayers()) do
        if player ~= speaker then
            table.insert(names, player.Name)
        end
    end
    return names
end
-- BOOST FPS
local function BoostFpsFunc(state)
    if state then
        if Terrain then
            Terrain.WaterWaveSize = 0
            Terrain.WaterWaveSpeed = 0
            Terrain.WaterReflectance = 0
            Terrain.WaterTransparency = 0
        end
        Lighting.GlobalShadows = false
        Lighting.FogEnd = 9e9
        pcall(function() settings().Rendering.QualityLevel = Enum.QualityLevel.Level01 end)

        -- Optimasi Part dan Efek
        for _, v in pairs(game:GetDescendants()) do
            if v:IsA("BasePart") then
                pcall(function()
                    v.Material = Enum.Material.Plastic
                    v.Reflectance = 0
                end)
            elseif v:IsA("Decal") then
                pcall(function() v.Transparency = 1 end)
            elseif v:IsA("ParticleEmitter") or v:IsA("Trail") then
                pcall(function() v.Lifetime = NumberRange.new(0) end)
            elseif v:IsA("Explosion") then
                pcall(function()
                    v.BlastPressure = 1
                    v.BlastRadius = 1
                end)
            end
        end

        -- Menonaktifkan efek pencahayaan
        for _, v in pairs(Lighting:GetDescendants()) do
            if v:IsA("BlurEffect") or v:IsA("SunRaysEffect") or v:IsA("ColorCorrectionEffect") 
            or v:IsA("BloomEffect") or v:IsA("DepthOfFieldEffect") then
                pcall(function() v.Enabled = false end)
            end
        end

        -- Hapus efek yang muncul setelahnya
        workspace.DescendantAdded:Connect(function(child)
            task.spawn(function()
                if child:IsA("ForceField") or child:IsA("Sparkles") 
                or child:IsA("Smoke") or child:IsA("Fire") then
                    RunService.Heartbeat:Wait()
                    pcall(function() child:Destroy() end)
                end
            end)
        end)

    else
        -- Jika FPS Boost dimatikan, reset beberapa efek dasar
        if Terrain then
            Terrain.WaterWaveSize = 1
            Terrain.WaterWaveSpeed = 1
            Terrain.WaterReflectance = 0.5
            Terrain.WaterTransparency = 0.3
        end

        Lighting.GlobalShadows = true
        Lighting.FogEnd = 100000
        pcall(function() settings().Rendering.QualityLevel = Enum.QualityLevel.Automatic end)

        -- Mengembalikan efek pencahayaan
        for _, v in pairs(Lighting:GetDescendants()) do
            if v:IsA("BlurEffect") or v:IsA("SunRaysEffect") or v:IsA("ColorCorrectionEffect") 
            or v:IsA("BloomEffect") or v:IsA("DepthOfFieldEffect") then
                pcall(function() v.Enabled = true end)
            end
        end
    end
end
-- Auto Sell Function
local autoSellRunning = false 
local function AutoSell()
    if autoSellRunning then return end  
    autoSellRunning = true

    task.spawn(function()
        while _G.Config.AutoSell do  
            ReplicatedStorage.events.SellAll:InvokeServer()
            task.wait(0.1)  
        end
        autoSellRunning = false 
    end)
end

-- Helper functions for UI
local function Toggle(section, name, desc, settingName, func)
    local toggle = section:AddToggle(name, {
        Title = name,
        Description = desc,
        Default = _G.Config[settingName] or false
    })
    
    toggle:OnChanged(function(value)
        _G.Config[settingName] = value
        if func then
            func(value)
        end
    end)
    
    return toggle
end

local function TextBox(section, name, tooltip, placeholder, numberOnly, settingName)
    local box = section:AddInput(name, {
        Title = name,
        Default = _G.Config[settingName] or "",
        Placeholder = placeholder,
        Numeric = numberOnly,
        Finished = true,
        Tooltip = tooltip
    })
    
    box:OnChanged(function(value)
        if numberOnly then
            _G.Config[settingName] = tonumber(value)
        else
            _G.Config[settingName] = value
        end
    end)
    
    return box
end
local function Button(section, name, callback)
    local button = section:AddButton({
        Title = name,
        Callback = function()
            callback()
        end
    })
    
    return button
end

local function Slider(section, name, min, max, roundValues, settingName)
    local slider = section:AddSlider(name, {
        Title = name,
        Min = min,
        Max = max,
        Default = _G.Config[settingName] or min,
        Rounding = roundValues,
        Callback = function(value)
            _G.Config[settingName] = value
        end
    })
    
    return slider
end

local function Dropdown(section, Name, default, list, multi, ...)
    local SettingName, func = ...
    if not func and type(SettingName) == "function" then func = SettingName end
    SettingName = SettingName or Name

    if multi then
        default = (default or _G.Config[SettingName]) or {}
        if type(_G.Config[SettingName]) == "string" then
            _G.Config[SettingName] = {_G.Config[SettingName]}
        end
    else
        default = (default or _G.Config[SettingName]) or ""
    end

    local CreateDropdown = section:AddDropdown((Name or Name.."-dropdown"), {
        Title = Name or "Null",
        Values = list or {"None"},
        Multi = multi or false,
        Default = default
    })

    CreateDropdown:OnChanged(function(v)
        if multi and type(v) == 'table' then
            _G.Config[SettingName] = {}
            for _, selectedValue in pairs(v) do
                table.insert(_G.Config[SettingName], selectedValue)
            end
        else
            _G.Config[SettingName] = v
        end

        if func then
            func(v)
        end
    end)

    return CreateDropdown
end

-- Setup GUI
local function setupGUI()
    -- Create Window
    local Window = Fluent:CreateWindow({
        Title = "Fishing V0.1",
        SubTitle = "By ShielDTeam",
        TabWidth = 140,
        Size = UDim2.new(0, 550, 0, 350),
        Acrylic = true,
        Theme = "Dark"
    })
    
    -- Create Tabs
    local FishingTab = Window:AddTab({ Title = "Fishing", Icon = "🎣" })
    local ShopTab = Window:AddTab({ Title = "Shop", Icon = "⚙️" })
    local AutosTab = Window:AddTab({ Title = "Autos", Icon = "⚙️" })
    local AreaTab = Window:AddTab({ Title = "Area/TP", Icon = "⚙️" })
    local SettingsTab = Window:AddTab({ Title = "Setting", Icon = "⚙️" })
    
    -- Create Sections
    local MainSection = FishingTab:AddSection("Fishing Controls")
    local AutosSection = AutosTab:AddSection("Auto Sell")
    local StatsSection = FishingTab:AddSection("Fishing Stats")
    local SettingsSection = SettingsTab:AddSection("Settings")
    local CreditsSection = SettingsTab:AddSection("Credits")
    
    -- Main Section - Fishing Controls
    local AutoCastToggle = MainSection:AddToggle("AutoCast", {
        Title = "Instant Bobber", 
        Default = false
    })
    
    AutoCastToggle:OnChanged(function()
        _G.Config.AutoCast = AutoCastToggle.Value
        print("[INFO] Auto Cast:", AutoCastToggle.Value)
    end)
    
    local SuperReelToggle = MainSection:AddToggle("SuperReel", {
        Title = "Super Reel", 
        Default = false
    })
    
    SuperReelToggle:OnChanged(function()
        _G.Config.InstantReel = SuperReelToggle.Value
        print("[INFO] Super Reel:", SuperReelToggle.Value)
    end)
    
    local EquiqRod = MainSection:AddToggle("EquiqRod", {
        Title = "Equip Rod", 
        Default = false
    })
    EquiqRod:OnChanged(function(value)
        _G.Config.equipRod = value
        print("[INFO] equipRod:", value)
        LocalPlayer.Character.Humanoid:EquipTool(Backpack:FindFirstChild(RodName))
        LocalPlayer.Character.Humanoid:UnequipTools()
    end)
    
    local FreezeToggle = SettingsSection:AddToggle("FreezeChar", {
        Title = "Freeze Character",
        Default = false
    })
    
    FreezeToggle:OnChanged(function(value)
        FreezeCharacter(value)
    end)
    
    local AutoShakeFunc = MainSection:AddToggle("Auto Shake", {
        Title = "Auto Shake",
        Default = false
    })

    local BoostFpsToggle = SettingsSection:AddToggle("BoostFps", { 
        Title = "Boost FPS", 
        Default = false
    })

    BoostFpsToggle:OnChanged(function(value)
        BoostFpsFunc(value)
    end)

    AutoShakeFunc:OnChanged(function(value)
        _G.Config.AutoShake = value
        if value then
            Shake() -- Start Shake if true
        end
    end)
    local FishingToggle = MainSection:AddToggle("FishingToggle", {
        Title = "Fishing BUG",
        Default = false
    })
    
    FishingToggle:OnChanged(function(value)
        isFishing = value
        IsTemporary = value
    
        if isFishing then
            task.spawn(function()
                while isFishing do
                    local reel
                    local startTime = tick()
        
                    -- Coba cari reel selama 3 detik
                    while not reel and tick() - startTime < 10 do
                        reel = PlayerGui and PlayerGui:FindFirstChild("reel")
                        task.wait(0.1)
                    end
                    if reel then
                        LocalPlayer.Character.Humanoid:UnequipTools()
                        task.wait(0)
                        reel:Destroy()
                        task.wait(2.1)
                    else
                        LocalPlayer.Character.Humanoid:UnequipTools()
                    end
                    task.wait(0.1)
                end
            end)
        end        
    end)
    
    local AutoSellFunc = AutosSection:AddToggle("Auto Sell", {
        Title = "Auto Sell",
        Default = false
    })
    
    AutoSellFunc:OnChanged(function(value)
        _G.Config.AutoSell = value
        if value then
            AutoSell()
        end
    end)
    
    -- Area Tab Example
    local Main = AreaTab:AddSection('Main')
    local isFrozen1 = false
    local frozenPosition1
    local freezeBlock -- Menyimpan blok yang dibuat
    local Area = {
        { NAME = "None", CFrame = nil },
        { NAME = "Forsaken Veil", CFrame = CFrame.new(-2418.1167, -11223.5098, 7033.7627) },
        { NAME = "Antlean Storm", CFrame = CFrame.new(-3665.85889, 141.195038, 738.876343) },
        { NAME = "Podium 3", CFrame = CFrame.new(-13589.2578, -11050.2227, 71.2485275, -0.0684822872, 8.76760069e-08, 0.997652352, 5.31155342e-09, 1, -8.75177264e-08, -0.997652352, -6.94330093e-10, -0.0684822872) }
    }
    -- Fungsi untuk Membuat Blok di Bawah Kaki
    local function createFreezeBlock(position)
        if freezeBlock then
            freezeBlock:Destroy()
        end
        
        freezeBlock = Instance.new("Part")
        freezeBlock.Size = Vector3.new(10, 1, 10) -- Ukuran blok (lebar, tinggi, panjang)
        freezeBlock.Position = position - Vector3.new(0, 3, 0) -- Posisi di bawah karakter
        freezeBlock.Anchored = true
        freezeBlock.Transparency = 1 -- 1 = Transparan (tidak terlihat)
        freezeBlock.CanCollide = true
        freezeBlock.Parent = game.Workspace
    end

    -- Fungsi untuk Freeze + Matikan Animasi
    local function FreezeCharacter1(state)
        local Character = LocalPlayer.Character
        if not Character then return end

        local HumanoidRootPart = Character:FindFirstChild("HumanoidRootPart")
        local Humanoid = Character:FindFirstChild("Humanoid")
        if not HumanoidRootPart or not Humanoid then return end

        if state then
            frozenPosition1 = HumanoidRootPart.CFrame
            isFrozen1 = true

            -- Mencegah karakter jatuh
            Humanoid.PlatformStand = true
            Humanoid:SetStateEnabled(Enum.HumanoidStateType.Physics, false)

            -- Mematikan animasi
            local Animator = Humanoid:FindFirstChildOfClass("Animator")
            if Animator then
                Animator.Parent = nil
            end

            -- Buat blok di bawah kaki
            createFreezeBlock(HumanoidRootPart.Position)

            print("[INFO] Character is now frozen.")

            task.spawn(function()
                while isFrozen1 do
                    if Character and Character:FindFirstChild("HumanoidRootPart") then
                        Character.HumanoidRootPart.CFrame = frozenPosition1
                    end
                    task.wait(0.01)
                end
            end)
        else
            isFrozen1 = false
            Humanoid.PlatformStand = false
            Humanoid:SetStateEnabled(Enum.HumanoidStateType.Physics, true)

            -- Hapus blok setelah unfreeze
            if freezeBlock then
                freezeBlock:Destroy()
                freezeBlock = nil
            end

            print("[INFO] Character is now unfrozen.")
        end
    end
    local previousLocation = nil
    local function teleportTo(areaName)
        local Character = LocalPlayer.Character
        if not Character then return end
    
        local HumanoidRootPart = Character:FindFirstChild("HumanoidRootPart")
        if not HumanoidRootPart then return end
        if areaName == "None" and previousLocation then
            print("[INFO] Returning to previous location.")
            HumanoidRootPart.CFrame = previousLocation
            FreezeCharacter1(false)
            return
        end
    
        for _, v in pairs(Area) do
            if v.NAME == areaName then
                print("[INFO] Teleporting to:", v.NAME)
                previousLocation = HumanoidRootPart.CFrame
    
                HumanoidRootPart.CFrame = v.CFrame
                FreezeCharacter1(true)
                return
            end
        end
    
        print("[ERROR] Area tidak ditemukan!")
    end

    -- **Dropdown untuk memilih pemain yang akan diteleportasi**
    local selectedPlayer = "None"
    local teleportPlayerDropdown

    -- Fungsi untuk memperbarui dropdown pemain secara real-time
    local function updatePlayerDropdown()
        if teleportPlayerDropdown then
            RemoveDropdown(teleportPlayerDropdown)  -- Hapus dropdown lama
        end
        teleportPlayerDropdown = Dropdown(Main, "Teleport Player", "None", getPlayerNames(), false, function(selected)
            selectedPlayer = selected
        end)
    end

    updatePlayerDropdown()

    local teleportPlayerButton = Button(Main, "Teleport ke Pemain", function()
        if selectedPlayer ~= "None" then
            teleportToPlayer(selectedPlayer)
        end
    end)

    Players.PlayerAdded:Connect(updatePlayerDropdown)
    Players.PlayerRemoving:Connect(updatePlayerDropdown)
    local DeleteGambarUiToggle = SettingsSection:AddToggle("DeleteGambarUi", {
        Title = "Delete All UI",
        Default = false
    })
    
    DeleteGambarUiToggle:OnChanged(function(value)
        if value then
            for _, v in ipairs(game:GetService("Players").LocalPlayer.PlayerGui:GetDescendants()) do
                if v:IsA("ImageLabel") or v:IsA("ImageButton") then
                    v:Destroy()
                end
            end
        end
    end)
    Dropdown(Main, "Freaze Area", "None", {"None", "Forsaken Veil", "Antlean Storm", "Podium 3"}, false, function(selected)
        teleportTo(selected)
    end)
    
    -- Settings buttons
    SettingsSection:AddButton({
        Title = "Save Settings",
        Callback = function()
            SaveManager:Save("config")
        end
    })
    
    SettingsSection:AddButton({
        Title = "Load Settings",
        Callback = function()
            SaveManager:Load("config")
        end
    })
    
    -- Configure save managers
    SaveManager:SetLibrary(Fluent)
    InterfaceManager:SetLibrary(Fluent)
    SaveManager:SetFolder("SHIELDTEAM")
    InterfaceManager:SetFolder("SHIELDTEAM")
    
    -- Load saved config
    SaveManager:Load("config")
    setfpscap(240)
end

task.spawn(function()
    local pausedUI = CoreGui:FindFirstChild("RobloxNetworkPauseNotification")
    if pausedUI then
        pausedUI:Destroy()
        print("[INFO] Game Paused UI telah dihapus.")
    end
end)
-- Initialize the GUI
setupGUI()

print("Fishing Automation Loaded Successfully!")
